{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/amandabernardo23/projeto_bigdata/blob/main/Exerc%C3%ADcio_Python_1_Amanda\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f6oYv9LEcR8T"
      },
      "source": [
        "**Exercício 1 - Aquecimento de Python para Ciência de Dados**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "v4GVV_w1cYEY"
      },
      "source": [
        "1. Imprima \"Hello, World!\" no console."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "dJ12k9hPcNAg",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7bea54c5-4594-4c32-97b3-1f6267457bfa"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hello, World!\n"
          ]
        }
      ],
      "source": [
        "print(\"Hello, World!\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ADK7MX25ciYu"
      },
      "source": [
        "2. Crie uma variável x com valor 10 e imprima seu valor."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "kk5h1v7ocqel",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8df129f2-5a4a-413c-a031-c522fc7db613"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "o valor da variavel é 12\n"
          ]
        }
      ],
      "source": [
        "x = 10\n",
        "print (\"o valor da variavel é\", x)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bKry1Lukcq6l"
      },
      "source": [
        "3. Some dois números e exiba o resultado."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "S6IyQT4Lc2vf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0e81fa1b-1822-4153-a03e-2db767de0bdf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A soma de 9 e 7 é: 16\n"
          ]
        }
      ],
      "source": [
        "numero1 = 9\n",
        "numero2 = 7\n",
        "soma = numero1 + numero2\n",
        "print(\"A soma de\", numero1, \"e\", numero2, \"é:\", soma)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6BG1PN9Qc3VA"
      },
      "source": [
        "4. Verifique se um número é par ou ímpar.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "K6NLPZoRc7ov",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "689d51b7-6b8d-4451-fc70-a8401826356f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "13 é ímpar\n"
          ]
        }
      ],
      "source": [
        "numero = 13\n",
        "\n",
        "if numero % 2 == 0:\n",
        "    print(f\"{numero} é par\")\n",
        "else:\n",
        "    print(f\"{numero} é ímpar\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5dKg-xpvc4xs"
      },
      "source": [
        "5. Crie uma função que receba dois números e retorne a soma deles."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "iv1-9Zytc4S3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f44285b7-c764-40be-9584-6f3ce5233a4b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A soma é: 17\n"
          ]
        }
      ],
      "source": [
        "\n",
        "def soma_dois_numeros(num1, num2):\n",
        "  return num1 + num2\n",
        "\n",
        "resultado = soma_dois_numeros(14, 3)\n",
        "print(f\"A soma é: {resultado}\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zsdBZtyjc_62"
      },
      "source": [
        "6. Crie uma lista com os números de 1 a 5 e imprima-a.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "xGgkwH7jdCh-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "51048991-2eca-46aa-bcce-ea0c70c06063"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1, 2, 3, 4, 5]\n"
          ]
        }
      ],
      "source": [
        "minha_lista = [1, 2, 3, 4, 5]\n",
        "print(minha_lista)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "snUAe4qddFsm"
      },
      "source": [
        "7. Adicione o número 6 à lista criada na questão anterior.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "metadata": {
        "id": "QVpSgy7FdGk9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c720c53b-6ae5-4a2c-cb1c-ae86641cdfa8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1, 2, 3, 4, 5, 6]\n"
          ]
        }
      ],
      "source": [
        "minha_lista = [1, 2, 3, 4, 5]\n",
        "minha_lista.append(6)\n",
        "print(minha_lista)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4HT4BfD1dI8f"
      },
      "source": [
        "8. Remova o número 3 da lista."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "id": "QCCxAurPdKjB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a15dd4a6-c523-4e75-a95d-abb8e9d66554"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1, 2, 4, 5, 6]\n"
          ]
        }
      ],
      "source": [
        "minha_lista = [1, 2, 3, 4, 5, 6]\n",
        "minha_lista.remove(3)\n",
        "print(minha_lista)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RyI_EEltdMZt"
      },
      "source": [
        "9. Acesse o terceiro elemento da lista."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "id": "HIkSUt_EdOSD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3d81c208-59c2-44ba-c3e0-0034d67a082c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3\n"
          ]
        }
      ],
      "source": [
        "minha_lista = [1, 2, 3, 4, 5, 6]\n",
        "terceiro_elemento = minha_lista[2]\n",
        "print(terceiro_elemento)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yQjJYNSsdQUI"
      },
      "source": [
        "10. Imprima o tamanho da lista."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "id": "Nz1jOedbdTR-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "14225a94-d6fe-43f3-dafa-79d1007bf92c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "6\n"
          ]
        }
      ],
      "source": [
        "minha_lista = [1, 2, 3, 4, 5, 6]\n",
        "tamanho_lista = len(minha_lista)\n",
        "print(tamanho_lista)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2gm3RaRKdyCg"
      },
      "source": [
        "11. Crie um dicionário com informações de um carro (marca, modelo, ano)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "gL_Svemid1kG",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9133061e-9399-4942-bcad-f8dff1165720"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'marca': 'Jeep', 'modelo': 'Compass', 'ano': 2021}\n"
          ]
        }
      ],
      "source": [
        "\n",
        "carro = {\n",
        "    \"marca\": \"Jeep\",\n",
        "    \"modelo\": \"Compass\",\n",
        "    \"ano\": 2021\n",
        "}\n",
        "print(carro)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ng6tNEYtd0hE"
      },
      "source": [
        "12. Acesse o valor associado à chave \"marca\" no dicionário."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "metadata": {
        "id": "VPDbrV6Ad0Pn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1fc81f89-a00e-4e69-e570-b0fdd1c5bce7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Jeep\n"
          ]
        }
      ],
      "source": [
        "carro = {\n",
        "    \"marca\": \"Jeep\",\n",
        "    \"modelo\": \"Compass\",\n",
        "    \"ano\": 2021\n",
        "}\n",
        "marca_do_carro = carro[\"marca\"]\n",
        "print(marca_do_carro)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ov93hI7Td7c9"
      },
      "source": [
        "13. Adicione uma nova chave \"cor\" com valor \"preto\" ao dicionário."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "id": "TrQLLfpid69U",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e485293-0010-42f4-8400-5c48b9b8ce2b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'marca': 'Fiat', 'modelo': 'Uno', 'ano': 1990, 'cor': 'vermelho'}\n"
          ]
        }
      ],
      "source": [
        "carro = {\n",
        "    \"marca\": \"Jeep\",\n",
        "    \"modelo\": \"Compass\",\n",
        "    \"ano\": 2021\n",
        "}\n",
        "carro[\"cor\"] = \"preto\"\n",
        "print(carro)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b_5cOma2d9LP"
      },
      "source": [
        "14. Verifique se a chave \"modelo\" existe no dicionário.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "metadata": {
        "id": "DUMaXPQYd8bM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7335ec4b-7e4f-4fbb-f461-dae25593dde9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A chave 'modelo' existe no dicionário.\n"
          ]
        }
      ],
      "source": [
        "carro = {\n",
        "    \"marca\": \"Jeep\",\n",
        "    \"modelo\": \"Compass\",\n",
        "    \"ano\": 2021\n",
        "}\n",
        "if \"modelo\" in carro:\n",
        "    print(\"A chave 'modelo' existe no dicionário.\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Zpqnxu2ReBZH"
      },
      "source": [
        "15. Itere sobre as chaves do dicionário e imprima cada uma delas."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "metadata": {
        "id": "4juQCK0veA-g",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a6b51fee-c923-4611-fa14-7997ed0376eb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "marca\n",
            "modelo\n",
            "ano\n"
          ]
        }
      ],
      "source": [
        "\n",
        "carro = {\n",
        "    \"marca\": \"Jeep\",\n",
        "    \"modelo\": \"Compass\",\n",
        "    \"ano\": 2021\n",
        "}\n",
        "\n",
        "for chave in carro:\n",
        "  print(chave)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GAoDb4pneG-j"
      },
      "source": [
        "15. Itere sobre as chaves do dicionário e imprima cada uma delas."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aqi8-PtUeGx5"
      },
      "outputs": [],
      "source": [
        "\n",
        "carro = {\n",
        "    \"marca\": \"Jeep\",\n",
        "    \"modelo\": \"Compass\",\n",
        "    \"ano\": 2021\n",
        "}\n",
        "\n",
        "for chave in carro:\n",
        "  print(chave)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oxI3BVhteGhH"
      },
      "source": [
        "17. Crie uma função que receba uma lista e retorne a soma dos elementos."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 47,
      "metadata": {
        "id": "Ijnkd3cJeMM_",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e2c89bee-3a8a-43c6-e742-3389677ea26a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A soma dos elementos da lista é: 15\n"
          ]
        }
      ],
      "source": [
        "def soma_lista(lista):\n",
        "  soma = 0\n",
        "  for elemento in lista:\n",
        "    soma += elemento\n",
        "  return soma\n",
        "\n",
        "minha_lista = [1, 2, 3, 4, 5]\n",
        "resultado = soma_lista(minha_lista)\n",
        "print(f\"A soma dos elementos da lista é: {resultado}\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Abqc7zdfeNl7"
      },
      "source": [
        "18. Crie uma função que receba um dicionário e retorne todas as suas chaves.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "metadata": {
        "id": "ZbHQ9bipeQc3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6aae5e25-108e-438f-c922-4f560445161a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "As chaves do dicionário são: ['nome', 'idade', 'cidade']\n"
          ]
        }
      ],
      "source": [
        "def retorna_chaves_dicionario(dicionario):\n",
        "  return dicionario.keys()\n",
        "\n",
        "meu_dicionario = {\"nome\": \"Maria\", \"idade\": 30, \"cidade\": \"São Paulo\"}\n",
        "chaves = retorna_chaves_dicionario(meu_dicionario)\n",
        "print(f\"As chaves do dicionário são: {list(chaves)}\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wF_R9JlDeNip"
      },
      "source": [
        "\n",
        "19. Crie uma função que receba um dicionário e imprima chave e valor em linhas separadas."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 52,
      "metadata": {
        "id": "ONvkXUDWeVX3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "57c60246-27a0-4020-de0a-d952c7dd4f6a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Chave: nome\n",
            "Valor: Maria\n",
            "----------\n",
            "Chave: idade\n",
            "Valor: 30\n",
            "----------\n",
            "Chave: cidade\n",
            "Valor: São Paulo\n",
            "----------\n"
          ]
        }
      ],
      "source": [
        "\n",
        "def imprime_chave_valor(dicionario):\n",
        "  for chave, valor in dicionario.items():\n",
        "    print(f\"Chave: {chave}\")\n",
        "    print(f\"Valor: {valor}\")\n",
        "    print(\"-\" * 10)\n",
        "\n",
        "meu_dicionario = {\"nome\": \"Maria\", \"idade\": 30, \"cidade\": \"São Paulo\"}\n",
        "imprime_chave_valor(meu_dicionario)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5ZSYRpJ-eM4s"
      },
      "source": [
        "20. Crie uma classe chamada Pessoa com atributos nome e idade, e um método que imprima esses dados."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 54,
      "metadata": {
        "id": "RNqpzQzdeYUG",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "71f703bf-5d59-49e8-9e4a-ee5794c0b376"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Nome: Maria\n",
            "Idade: 29\n"
          ]
        }
      ],
      "source": [
        "\n",
        "class Pessoa:\n",
        "  def __init__(self, nome, idade):\n",
        "    self.nome = nome\n",
        "    self.idade = idade\n",
        "\n",
        "  def imprimir_dados(self):\n",
        "    print(f\"Nome: {self.nome}\")\n",
        "    print(f\"Idade: {self.idade}\")\n",
        "\n",
        "pessoa1 = Pessoa(\"Maria\", 29)\n",
        "pessoa1.imprimir_dados()\n"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}